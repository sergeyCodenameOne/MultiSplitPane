package com.codename1.components;


import com.codename1.io.Log;
import com.codename1.ui.*;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;

import java.util.Arrays;

import static com.codename1.ui.CN.*;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MultiSplitPaneTest {
    private boolean isShow = true;

    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
//        Form demoForm = twoVerticalSplitDemo();
//        Form demoForm = twoHorizontalSplitDemo();
//        Form demoForm = threeHorizontalSplitDemo();
//        Form demoForm = threeVerticalSplitDemo();
        Form demoForm = threeVerticalAndHorizontalSplitDemo();
        demoForm.show();
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

    public Form twoVerticalSplitDemo(){
        Form hi = new Form("Hi World", new BorderLayout());

        Label l1 = new Label("demo label 1");
        Label l2 = new Label("demo label 2");
        Label l3 = new Label("demo label 3");
        Label l4 = new Label("demo label 4");
        Label l5 = new Label("demo label 5");
        Label l6 = new Label("demo label 6");

        Container c1 = BoxLayout.encloseY(l1, l2, l3);
        Container c2 = BoxLayout.encloseY(l4, l5, l6);

        Container div1 = new Container(new BorderLayout(BorderLayout.CENTER_BEHAVIOR_CENTER));
        div1.setUIID("DemoDivider");
        div1.setIgnorePointerEvents(true);
        div1.add(BorderLayout.CENTER, new Label(FontImage.createMaterial(FontImage.MATERIAL_AIRPLANEMODE_ON, UIManager.getInstance().getComponentStyle("label"), 2)));

        MultiSplitLayout.Node[] nodes = {
                new MultiSplitLayout.Leaf("leaf 1"),
                new MultiSplitLayout.Divider("div 1"),
                new MultiSplitLayout.Leaf("leaf 2")};

        MultiSplitLayout.Split model = new MultiSplitLayout.Split();
        model.setRowLayout(false);
        model.setChildren(Arrays.asList(nodes));

        MultiSplitPane splitPane = new MultiSplitPane(model);
        splitPane.addComponent("leaf 1", c1);
        splitPane.addComponent("leaf 2", c2);
        splitPane.addComponent("div 1", div1);
        hi.add(BorderLayout.CENTER, splitPane);

        return hi;
    }

    public Form twoHorizontalSplitDemo(){
        Form hi = new Form("Hi World", new BorderLayout());

        Label l1 = new Label("demo label 1");
        Label l2 = new Label("demo label 2");
        Label l3 = new Label("demo label 3");
        Label l4 = new Label("demo label 4");
        Label l5 = new Label("demo label 5");
        Label l6 = new Label("demo label 6");
        Label l7 = new Label("demo label 7");
        Label l8 = new Label("demo label 8");
        Button l9 = new Button("demo button show");

        Container c1 = BoxLayout.encloseY(l1, l2, l3);
        Container c2 = BoxLayout.encloseY(l4, l5, l6);

        Container div1 = new Container(new BorderLayout(BorderLayout.CENTER_BEHAVIOR_CENTER));
        div1.add(BorderLayout.CENTER, new Label(FontImage.createMaterial(FontImage.MATERIAL_AIRPLANEMODE_ON, UIManager.getInstance().getComponentStyle("label"), 2)));
        div1.setIgnorePointerEvents(true);
        div1.setUIID("DemoDivider");

        MultiSplitLayout.Node[] nodes = {
                new MultiSplitLayout.Leaf("leaf 1"),
                new MultiSplitLayout.Divider("div 1"),
                new MultiSplitLayout.Leaf("leaf 2")};

        MultiSplitLayout.Split model = new MultiSplitLayout.Split();
        model.setChildren(Arrays.asList(nodes.clone()));

        MultiSplitPane splitPane = new MultiSplitPane(model);
        splitPane.addComponent("leaf 1", c1);
        splitPane.addComponent("leaf 2", c2);
        splitPane.addComponent("div 1", div1);
        hi.add(BorderLayout.CENTER, splitPane);

        return hi;
    }

    public Form threeHorizontalSplitDemo(){
        Form hi = new Form("Hi World", new BorderLayout());

        Label l1 = new Label("demo label 1");
        Label l2 = new Label("demo label 2");
        Label l3 = new Label("demo label 3");
        Label l4 = new Label("demo label 4");
        Label l5 = new Label("demo label 5");
        Label l6 = new Label("demo label 6");
        Label l7 = new Label("demo label 7");
        Label l8 = new Label("demo label 8");
        Button l9 = new Button("demo button show");

        Container c1 = BoxLayout.encloseY(l1, l2, l3);
        Container c2 = BoxLayout.encloseY(l4, l5, l6);
        Container c3 = BoxLayout.encloseY(l7, l8, l9);

        Container div1 = new Container(new BorderLayout(BorderLayout.CENTER_BEHAVIOR_CENTER));
        div1.add(BorderLayout.CENTER, new Button(FontImage.createMaterial(FontImage.MATERIAL_AIRPLANEMODE_ON, UIManager.getInstance().getComponentStyle("label"), 2)));

        Container div2 = new Container(new BorderLayout(BorderLayout.CENTER_BEHAVIOR_CENTER));
        div2.add(BorderLayout.CENTER, new Button(FontImage.createMaterial(FontImage.MATERIAL_AIRPLANEMODE_ON, UIManager.getInstance().getComponentStyle("label"), 2)));

        div1.setIgnorePointerEvents(true);
        div2.setIgnorePointerEvents(true);

        MultiSplitLayout.Node[] nodes = {
                new MultiSplitLayout.Leaf("leaf 1"),
                new MultiSplitLayout.Divider("div 1"),
                new MultiSplitLayout.Leaf("leaf 2"),
                new MultiSplitLayout.Divider("div 2"),
                new MultiSplitLayout.Leaf("leaf 3"),
        };

        MultiSplitLayout.Split model = new MultiSplitLayout.Split();
        model.setChildren(Arrays.asList(nodes));

        MultiSplitPane splitPane = new MultiSplitPane(model);
        splitPane.addComponent("leaf 1", c1);
        splitPane.addComponent("leaf 2", c2);
        splitPane.addComponent("leaf 3", c3);
        splitPane.addComponent("div 1", div1);
        splitPane.addComponent("div 2", div2);
        hi.add(BorderLayout.CENTER, splitPane);

        return hi;
    }
    public Form threeVerticalSplitDemo(){
        Form hi = new Form("Hi World", new BorderLayout());

        Label l1 = new Label("demo label 1");
        Label l2 = new Label("demo label 2");
        Label l3 = new Label("demo label 3");
        Label l4 = new Label("demo label 4");
        Label l5 = new Label("demo label 5");
        Label l6 = new Label("demo label 6");
        Label l7 = new Label("demo label 7");
        Label l8 = new Label("demo label 8");
        Button l9 = new Button("demo button show");

        Container c1 = BoxLayout.encloseY(l1, l2, l3);
        Container c2 = BoxLayout.encloseY(l4, l5, l6);
        Container c3 = BoxLayout.encloseY(l7, l8, l9);

        Container div1 = new Container(new BorderLayout(BorderLayout.CENTER_BEHAVIOR_CENTER));
        Button button = new Button(FontImage.createMaterial(FontImage.MATERIAL_AIRPLANEMODE_ON, UIManager.getInstance().getComponentStyle("Label"), 2));
        div1.add(BorderLayout.CENTER, button);

        Container div2 = new Container(new BorderLayout(BorderLayout.CENTER_BEHAVIOR_CENTER));
        div2.add(BorderLayout.CENTER, new Label(FontImage.createMaterial(FontImage.MATERIAL_AIRPLANEMODE_ON, UIManager.getInstance().getComponentStyle("label"), 2)));

        div1.setIgnorePointerEvents(true);
        div1.setUIID("DemoDivider");
        div2.setIgnorePointerEvents(true);
        div2.setUIID("DemoDivider");


        MultiSplitLayout.Node[] nodes = {
                new MultiSplitLayout.Leaf("leaf 1"),
                new MultiSplitLayout.Divider("div 1"),
                new MultiSplitLayout.Leaf("leaf 2"),
                new MultiSplitLayout.Divider("div 2"),
                new MultiSplitLayout.Leaf("leaf 3"),
        };

        MultiSplitLayout.Split model = new MultiSplitLayout.Split();
        model.setRowLayout(false);
        model.setChildren(Arrays.asList(nodes));

        MultiSplitPane splitPane = new MultiSplitPane(model);
        splitPane.addComponent("leaf 1", c1);
        splitPane.addComponent("leaf 2", c2);
        splitPane.addComponent("leaf 3", c3);
        splitPane.addComponent("div 1", div1);
        splitPane.addComponent("div 2", div2);
        hi.add(BorderLayout.CENTER, splitPane);

        return hi;
    }

    public Form threeVerticalAndHorizontalSplitDemo() {
        Form hi = new Form("Hi World", new BorderLayout());

        Label l1 = new Label("demo label 1");
        Label l2 = new Label("demo label 2");
        Label l3 = new Label("demo label 3");
        Label l4 = new Label("demo label 4");
        Label l5 = new Label("demo label 5");
        Label l6 = new Label("demo label 6");
        Label l7 = new Label("demo label 7");
        Label l8 = new Label("demo label 8");
        Button l9 = new Button("demo button show");

        Container c1 = BoxLayout.encloseY(l1, l2, l3);
        Container c2 = BoxLayout.encloseY(l4, l5, l6);
        Container c3 = BoxLayout.encloseY(l7, l8, l9);

        Container div1 = new Container(new BorderLayout(BorderLayout.CENTER_BEHAVIOR_CENTER));
        div1.add(BorderLayout.CENTER, new Button(FontImage.createMaterial(FontImage.MATERIAL_AIRPLANEMODE_ON, UIManager.getInstance().getComponentStyle("label"), 2)));
        div1.setIgnorePointerEvents(true);
        div1.setUIID("DemoDivider");

        Button div2 = new Button(FontImage.createMaterial(FontImage.MATERIAL_AIRPLANEMODE_ON, UIManager.getInstance().getComponentStyle("label"), 2));
        div2.setIgnorePointerEvents(true);
        div2.setUIID("DemoDivider");

        MultiSplitLayout.Node[] nodes1 = {
                new MultiSplitLayout.Leaf("leaf 1"),
                new MultiSplitLayout.Divider("div 1"),
                new MultiSplitLayout.Leaf("leaf 2")};

        MultiSplitLayout.Split split = new MultiSplitLayout.Split();
        split.setChildren(Arrays.asList(nodes1));

        MultiSplitLayout.Node[] nodes2 = {
                new MultiSplitLayout.Leaf("leaf 3"),
                new MultiSplitLayout.Divider("div 2"),
                split};

        MultiSplitLayout.Split model = new MultiSplitLayout.Split();
        model.setChildren(Arrays.asList(nodes2));
        split.setRowLayout(false);

        MultiSplitPane splitPane = new MultiSplitPane(model);
        splitPane.addComponent("leaf 1", c1);
        splitPane.addComponent("leaf 2", c2);
        splitPane.addComponent("leaf 3", c3);
        splitPane.addComponent("div 1", div1);
        splitPane.addComponent("div 2", div2);

        hi.add(BorderLayout.CENTER, splitPane);

        return hi;
    }
}
